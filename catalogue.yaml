- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
    - name: disable nodejs
      ansible.builtin.command: dnf module disable nodejs -yes

    - name: install nodejs
      ansible.builtin.command: dnf module install nodejs:20 -y

    - name: create user
      ansible.builtin.user:
        name: roboshop
        shell: /sbin/nologin
        system: true
        home: /app

    - name: download catalogue code
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
        dest: /tmp/catalogue.zip

    - name: unzip
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: install dependencies
      community.general.npm:
      path: /app

    - name: system service
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name: system reload
      ansible.builtin.service:
        name: catalogue
        start: started
        enabled: yes

    - name: copu mongodb client
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: install mongo client
      ansible.builtin.dnf:
        name: mongod-mongosh
        state: present

    - name: check products loaded or not
      ansible.builtin.command: mongosh --host mongo.blackweb.agency --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
      register: catalogue_output

      - name: print catalogue catalogue output
      ansible.builtin.debug:
        msg: "{{catalogue_output}}"

    - name: load products
      ansible.builtin.shell: mongosh --host mongo.blackweb.agency < /app/db/master-data.js
      when: catalogue_output.stdout | int < 0




